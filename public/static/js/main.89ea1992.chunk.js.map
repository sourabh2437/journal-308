{"version":3,"sources":["App.js","components/CreateEntry.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","notes","timelines","show","modalTitle","best_moment","family_message","health_message","future_message","tmrw_message","groupBy","bind","assertThisInitialized","handleClose","handleShow","_this2","axios","then","res","results","data","setState","console","log","note","title","key","array","result","i","length","added","j","items","push","entry","_this3","react_default","a","createElement","className","url","Row","Link","to","pathname","aria-hidden","dist","map","timeline","index","journal_date","icon","iconColor","itr","Col","xs","md","lg","reactstrap_es","onClick","dangerouslySetInnerHTML","__html","Modal","onHide","Header","closeButton","Title","Body","color","Component","CreateEntry","moment","format","reaction","titleChange","best_moment_Change","health_msg_Change","family_msg_Change","future_msg_Change","tmrw_msg_Change","fnSaveEntry","fnCancelEntry","value","history","location","_this$state","post","str","substring","match","params","user","sm","lib_default","theme","placeholder","onChange","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.89ea1992.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {PageHeader} from 'react-bootstrap';\nimport { Card, Button, CardImg, CardTitle, CardText, CardDeck,\n CardSubtitle, CardBody ,CardLink} from 'reactstrap';\nimport axios from 'axios';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport {Row,Col,Grid} from 'react-bootstrap';\nimport {Timeline, TimelineEvent} from 'react-event-timeline';\nimport {Modal,Table,tr,thead,tbody,td} from 'react-bootstrap';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      notes:[],\n      timelines:[],\n      show:false,\n      modalTitle : \"\",\n      best_moment:\"\",\n      family_message:\"\",\n      health_message:\"\",\n      future_message:\"\",\n      tmrw_message:\"\"\n    }\n    this.groupBy = this.groupBy.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n  componentDidMount(){\n    axios('/notes').then(res => {\n      var results = this.groupBy(\"journal_date\",res.data);\n      this.setState({\n        notes : res.data,\n        timelines:results\n       });\n      //debugger;\n      console.log(this.state.notes);\n    });\n  }\n  handleClose() {\n    //debugger;\n    this.setState({\n      show: false,\n      modalTitle:\"\",\n      best_moment:\"\",\n      family_message:\"\",\n      health_message:\"\",\n      future_message:\"\",\n      tmrw_message:\"\"\n     });\n  }\n\n  handleShow(note) {\n    this.setState({\n      show: true,\n      modalTitle:note.title,\n      best_moment:note.best_moment,\n      family_message:note.family_message,\n      health_message:note.health_message,\n      future_message:note.future_message,\n      tmrw_message:note.tmrw_message\n    })\n  }\n groupBy(key, array) {\n   debugger;\n  var result = [];\n  for (var i = 0; i < array.length; i++) {\n    var added = false;\n    for (var j = 0; j < result.length; j++) {\n      if (result[j][key] == array[i][key]) {\n        result[j].items.push(array[i]);\n        added = true;\n        break;\n      }\n    }\n    if (!added) {\n      var entry = {items: []};\n      entry[key] = array[i][key];\n      entry.items.push(array[i]);\n      result.push(entry);\n    }\n  }\n  return result;\n}\n  render() {\n    return (\n      <div className=\"container app\">\n          <div className=\"page-header-row\">\n            <h2 className=\"page-header\">Journal 308\n            <img url=\"./us.jpg\"></img>\n            </h2>\n\n          </div>\n          <Row className=\"action-button-row\">\n            <Link className=\"add-entry-sh-btn\" to={{ pathname: '/create Shivani', state: { className: 'note_shivani'} }}><span className=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>New Entry - Shivani</Link>\n          <Link className=\"add-entry-so-btn\" to={{ pathname: '/create Sourabh', state: { className: 'note_sourabh'} }}><span className=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span>New Entry - Sourabh</Link>\n            <hr className=\"brace\"></hr>\n          </Row>\n          <Row>\n            <Timeline className=\"timeline\">\n              {this.state.timelines.map((timeline,index)=>\n                <TimelineEvent\n                  key={index}\n                  title={timeline.journal_date}\n                  icon={<i />}\n                  iconColor=\"#6fba1c\"\n                  className=\"timeline-event\" >\n                {timeline.items.map((note,itr)=>\n                  <Col xs={12} md={6} lg={3} className=\"timeline-event-col\" key={itr}>\n                    <Card className={note.className} onClick={this.handleShow.bind(this,note)}>\n                      <CardBody>\n                        <div dangerouslySetInnerHTML={{__html: note.title}}></div>\n                      </CardBody>\n                      <CardBody>\n                        <Row>\n                          <div>\n\n                          </div>\n                        </Row>\n                      </CardBody>\n                    </Card>\n                  </Col>\n\n                )}\n\n              </TimelineEvent>\n              )}\n              </Timeline>\n          </Row>\n          <Row>\n            <div>\n              <Modal show={this.state.show} className=\"\" onHide={this.handleClose.bind(this)}>\n                  <Modal.Header closeButton className=\"modal-title\">\n                    <Modal.Title>\n                      {\n                         <div  dangerouslySetInnerHTML={{__html: this.state.modalTitle}}></div>\n                      }\n                    </Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body className=\"container-fluid modal-desc\">\n                    <Row>\n                      <Col xs={12} lg={12}>\n                      <Card className=\"best-moment-pop\">\n                        <CardBody>\n                          <CardTitle className=\"card-title-pop\">Best moment of the day</CardTitle>\n                        </CardBody>\n                        <CardBody className=\"best-moment-body-pop\">\n                            <div>\n                               <div dangerouslySetInnerHTML={{__html: this.state.best_moment}}></div>\n                            </div>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                      <Col xs={12} lg={12}>\n                        <Card className=\"health-pop\">\n                          <CardBody>\n                            <CardTitle className=\"card-title-pop\">What did I do today to make my health better?</CardTitle>\n                          </CardBody>\n                          <CardBody className=\"health-body-pop\">\n                              <div>\n                                 <div dangerouslySetInnerHTML={{__html: this.state.health_message}}></div>\n                              </div>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                      <Col xs={12} lg={12}>\n                        <Card className=\"family-pop\">\n                          <CardBody>\n                            <CardTitle className=\"card-title-pop\">Throwback to one memory with Sourabh/Shivani</CardTitle>\n                          </CardBody>\n                          <CardBody className=\"family-body-pop\">\n                              <div>\n                                 <div dangerouslySetInnerHTML={{__html: this.state.family_message}}></div>\n                              </div>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                      <Col xs={12} lg={12}>\n                        <Card className=\"future-pop\">\n                          <CardBody>\n                            <CardTitle className=\"card-title-pop\">What did I do today to make my future better?</CardTitle>\n                          </CardBody>\n                          <CardBody className=\"future-body-pop\">\n                              <div>\n                                 <div dangerouslySetInnerHTML={{__html: this.state.future_message}}></div>\n                              </div>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                      <Col xs={12} lg={12}>\n                        <Card className=\"tmrw-pop\">\n                          <CardBody>\n                            <CardTitle className=\"card-title-pop\">One thing I want to do better tomorrow?</CardTitle>\n                          </CardBody>\n                          <CardBody className=\"tmrw-body-pop\">\n                              <div>\n                                 <div dangerouslySetInnerHTML={{__html: this.state.tmrw_message}}></div>\n                              </div>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                  </Row>\n                  <Row>\n                    <Button className=\"close-popover\" color=\"danger\" onClick={this.handleClose}>Close</Button>\n                  </Row>\n                  </Modal.Body>\n              </Modal>\n            </div>\n          </Row>\n        </div>\n    );\n  }\n}\nexport default App;\n","import React,{Component} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.bubble.css';\nimport axios from 'axios';\nimport {Row,Col} from 'react-bootstrap';\nimport { Button } from 'reactstrap';\nimport moment from 'moment';\nclass CreateEntry extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      journal_date : moment().format('ll'),\n      title : \"\",\n      best_moment : \"\",\n      health_message : \"\",\n      family_message : \"\",\n      future_message : \"\",\n      tmrw_message : \"\",\n      reaction : \"\"\n   }\n    this.titleChange = this.titleChange.bind(this);\n    this.best_moment_Change = this.best_moment_Change.bind(this);\n    this.health_msg_Change = this.health_msg_Change.bind(this);\n    this.family_msg_Change = this.family_msg_Change.bind(this);\n    this.future_msg_Change = this.future_msg_Change.bind(this);\n    this.tmrw_msg_Change = this.tmrw_msg_Change.bind(this);\n    this.fnSaveEntry = this.fnSaveEntry.bind(this);\n    this.fnCancelEntry = this.fnCancelEntry.bind(this);\n\n  }\n  titleChange(value) {\n\n    this.setState({ title: value })\n  }\n  best_moment_Change(value){\n    this.setState({ best_moment: value })\n  }\n  family_msg_Change(value){\n    this.setState({ family_message: value })\n  }\n  health_msg_Change(value){\n    this.setState({ health_message: value })\n  }\n\n  future_msg_Change(value){\n    this.setState({ future_message: value })\n  }\n  tmrw_msg_Change(value){\n    this.setState({ tmrw_message: value })\n  }\n  componentDidMount(){\n    debugger;\n  }\n  fnCancelEntry(){\n    this.props.history.push(\"/\");\n  }\n  fnSaveEntry(){\n    const{className} = this.props.location.state;\n    const {journal_date, title, best_moment ,health_message,family_message,future_message ,\n    tmrw_message,reaction} = this.state;\n    if(title !== \"\" && best_moment !== \"\"){\n      axios.post('/notes', { journal_date, title, best_moment ,health_message,family_message,future_message ,\n      tmrw_message,reaction,className })\n       .then(result => {\n         this.props.history.push(\"/\")\n       });\n    }\n  }\n  fnGetUserName(){\n    var str = this.props.location.state.className;\n    return str.substring(5,str.length);\n  }\n  render(){\n    return (\n      <div className=\"container-fluid create-entry\">\n      <Row>\n        <div className=\"new-entry-title pull-left\">New Entry : <br/><div className=\"new-entry-username\"> {this.props.match.params.user} </div></div>\n\n        <div className=\"calendar date pull-right\">\n        \t<span className=\"binds\"></span>\n        \t<span className=\"month\">{moment().format('MMMM')}</span>\n        \t<h1 className=\"day\">{moment().format('D')}</h1>\n        </div>\n      </Row>\n      <Row>\n        <Col xs={12} sm={6} md={4} lg={4}>\n        <ReactQuill className=\"title-editor\" theme=\"bubble\" placeholder=\"Every Single day is UNIQUE, Describe ur day in 3 words or less!\" value={this.state.title || \" \"}\n                  onChange={this.titleChange} >\n        </ReactQuill>\n      </Col>\n      <Col  xs={12} sm={6} md={4} lg={4}>\n        <ReactQuill className=\"best-moment-editor\" theme=\"bubble\" placeholder=\"Best moment of the day?\" value={this.state.best_moment}\n                  onChange={this.best_moment_Change} />\n      </Col>\n      <Col xs={12} sm={6} md={4} lg={4}>\n      <ReactQuill className=\"health-editor\" theme=\"bubble\" placeholder=\"What did I do today to make my health better?\" value={this.state.health_message || \" \"}\n                onChange={this.health_msg_Change} >\n      </ReactQuill>\n    </Col>\n    <Col  xs={12} sm={6} md={4} lg={4}>\n      <ReactQuill className=\"family-editor\" theme=\"bubble\" placeholder=\"Throwback to one memory with Sourabh/Shivani\" value={this.state.family_message}\n                onChange={this.family_msg_Change} />\n    </Col>\n    <Col  xs={12} sm={6} md={4} lg={4}>\n      <ReactQuill className=\"future-editor\" theme=\"bubble\" placeholder=\"What did I do today to make my future better?\" value={this.state.future_message}\n                onChange={this.future_msg_Change} />\n    </Col>\n    <Col  xs={12} sm={6} md={4} lg={4}>\n      <ReactQuill className=\"tmrw-editor\" theme=\"bubble\" placeholder=\"One thing I want to do better tomorrow?\" value={this.state.tmrw_message}\n                onChange={this.tmrw_msg_Change} />\n    </Col>\n\n      </Row>\n      <Row>\n      </Row>\n        <Button className=\"new-note-save-btn\" color=\"success\" onClick={this.fnSaveEntry}>Save</Button>\n        <Button className=\"new-note-save-btn\" color=\"danger\" onClick={this.fnCancelEntry}>Cancel</Button>\n      </div>\n    );\n  }\n}\nexport default CreateEntry;\n// <div className=\"container-fluid create-entry\">\n// <Row>\n//   <div className=\"new-note-title\">Title</div>\n//   <ReactQuill className=\"title-editor\" theme=\"bubble\" placeholder=\"Describe ur day in 3 words or less!\" value={this.state.title || \" \"}\n//             onChange={this.titleChange} >\n//   </ReactQuill>\n// </Row>\n// <Row>\n//   <div className=\"new-note-message\">Message</div>\n//     <ReactQuill className=\"message-editor\" theme=\"bubble\" placeholder=\"Hey beautiful, how was ur day!\" value={this.state.message}\n//               onChange={this.messageChange} />\n// </Row>\n//   <Button className=\"new-note-save-btn\" color=\"success\" onClick={this.fnSaveEntry}>Save</Button>\n// </div>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport CreateEntry from './components/CreateEntry';\nReactDOM.render(\n  <Router>\n      <div>\n        <Route exact path='/' component={App} />\n        <Route path='/create:user' component={CreateEntry} />\n      </div>\n  </Router>,\n  document.getElementById('root')\n);\n// <Route path='/edit/:id' component={Edit} />\n// <Route path='/create' component={Create} />\n// <Route path='/show/:id' component={Show} />\n"],"sourceRoot":""}